

私が取り組んだこと

2021年2月

大学に入学する前、私が学外で取り組んだ主な事は執筆とプログラミングの 2 つでした。私はエッセイを書きませんでした。当時、そしておそらく今も、初心者の作家が書くべきもの、つまり短編小説を私は書きました。私の話はひどいものだった。ストーリーはほとんどなく、感情の強いキャラクターばかりで、それが奥深いのではないかと想像しました。

私が最初に作成しようとしたプログラムは、学区で当時「データ処理」と呼ばれていたものに使用されていた IBM 1401 上でした。これは 9 年生のときで、私は 13 歳か 14 歳でした。学区の 1401 番地はたまたま中学校の地下にあり、友人のリッチ ドレイヴスと私はそこを使用する許可を得ました。そこは、まるでミニボンドの悪役の隠れ家のようで、CPU、ディスクドライブ、プリンター、カードリーダーといったエイリアンのようなマシンがすべて、明るい蛍光灯の下、高い床の上に鎮座していた。

私たちが使用した言語は Fortran の初期バージョンでした。パンチカードにプログラムを入力し、カードリーダーに重ねてボタンを押してプログラムをメモリにロードして実行する必要がありました。その結果、通常は、驚くほど大きな音を立てるプリンタで何かを印刷することになります。

私は 1401 に困惑しました。どうすればよいのかわかりませんでした。そして振り返ってみると、それで私にできることはあまりありませんでした。プログラムへの唯一の入力形式はパンチカードに保存されたデータであり、私はパンチカードに保存されたデータを持っていませんでした。他の唯一の選択肢は、円周率の近似値を計算するなど、入力に依存しないことを行うことでしたが、そのような興味深いことを行うのに十分な数学の知識がありませんでした。ですから、自分が書いたプログラムを思い出せなくても不思議ではありません。大したことはできなかったはずですから。私の最も鮮明な記憶は、プログラムが終了しない可能性があることを知った瞬間のことです。そのとき、私のプログラムの 1 つは終了しませんでした。データセンター管理者の表情が明らかにしたように、タイムシェアリングのないマシンでは、これは技術的エラーであると同時に社会的エラーでもありました。

マイクロコンピューターの登場により、すべてが変わりました。コンピューターを目の前の机の上に置いて、パンチカードの束をただかき回して停止するのではなく、実行中にキーストロークに応答できるようになりました。[1]

私の友人の中で最初にマイクロコンピューターを手に入れた人は、自分でそれを作りました。Heathkit社からキットとして販売されていました。彼がその前に座って、コンピューターにプログラムを打ち込んでいるのを見て、どれほど感動し、うらやましく思ったかを鮮明に覚えています。

当時コンピュータは高価で、1980 年頃に父を説得して TRS-80 を購入するまで何年も小言を言いました。当時のゴールドスタンダードは Apple II でしたが、TRS-80 で十分でした。私が本格的にプログラミングを始めたのはこの時でした。私は簡単なゲーム、模型ロケットがどれだけ高く飛ぶかを予測するプログラム、そして父が少なくとも一冊の本を書くために使っていたワードプロセッサを書きました。メモリにはテキストを約 2 ページ分しか入れる余地がなかったので、一度に 2 ページずつ書いてから印刷していましたが、タイプライターよりもはるかに優れていました。

プログラミングは好きでしたが、大学で学ぶつもりはありませんでした。大学では哲学を学ぶつもりでしたが、それははるかに強力に聞こえました。高校生だった純朴な私にとって、他の分野で学ぶことは単なる専門知識に過ぎないのに比べ、それは究極の真理の研究であるように思えました。大学に入学して私が発見したのは、他の分野がアイデアのスペースの多くを占めており、これらの究極の真実と思われるものはあまり残されていないということでした。哲学に残されたと思われるのは、他の分野の人々が無視しても問題ないと思われる特殊なケースだけでした。

18 歳の私には、このことを言葉で言い表すことはできませんでした。当時私が知っていたのは、哲学のコースを受講し続けたが、退屈し続けていたということだけでした。そこでAIに切り替えることにしました。

AI は 1980 年代半ばに注目を集めていましたが、私が AI に取り組みたいと思わせたものが特に 2 つありました。1 つはハインラインの小説『The Moon is a Harsh Mistress』で、マイクと呼ばれるインテリジェント コンピューターが登場しました。もう 1 つは PBS のドキュメンタリーです。テリー・ウィノグラード氏は SHRDLU を使用していることを示しました。『月は過酷な愛人』は再読していないので、どの程度古くなっているかは分かりませんが、読んでいてすっかりその世界に引き込まれました。Mike が誕生するのは時間の問題のように思えましたが、Winograd が SHRDLU を使用しているのを見たとき、それは長くても数年かかるように思えました。あなたがしなければならなかったのは、SHRDLU にもっと単語を教えることだけでした。

当時、コーネル大学には AI の授業はおろか、大学院の授業さえありませんでした。そのため、私は独学で勉強しようと努め始めました。当時、Lisp は AI の言語とみなされていたため、これは Lisp を学ぶことを意味しました。当時一般的に使用されていたプログラミング言語はかなり原始的であり、プログラマーのアイデアもそれに応じて原始的でした。コーネル大学のデフォルト言語は PL/I と呼ばれる Pascal に似た言語であり、状況は他の場所でも同様でした。Lisp を学ぶことでプログラムの概念が急速に拡張されたため、新しい限界がどこにあるのかを認識し始めるまでに何年もかかりました。これはむしろそれに似ていました。これは私が大学に期待していたことだった。それは授業中に起こるはずだったわけではありませんでしたが、それは問題ありませんでした。それから数年間、私は順調に進みました。自分が何をしようとしているのかはわかっていました。

学部の論文のために、SHRDLU をリバース エンジニアリングしました。なんと、私はそのプログラムに取り組むのが大好きでした。それは楽しいコードでしたが、それをさらに刺激的にしたのは、今では想像しにくいですが、1985 年当時では珍しいことではありませんでしたが、コードはすでに知性の低い坂を登っていたという私の信念でした。

私はコーネル大学で専攻を選択しないプログラムに参加していました。好きな授業を受講し、学位を取得するために好きなものを選択することができました。私はもちろん「人工知能」を選びました。実際の物理的な卒業証書を受け取ったとき、引用文が含まれていることに気づき、恐怖の引用文のように読めて愕然としました。当時、これは私を悩ませましたが、今では、私が発見しようとしていた理由により、面白いほど正確であるように思えます。

私は 3 つの大学院に応募しました。当時 AI で有名だった MIT とイェール大学、そしてハーバード大学は、リッチ・ドレーブスが通っていたので訪問したことがあり、ある種のパーサーを発明したビル・ウッズの本拠地でもありました。私はSHRDLUクローンで使用しました。ハーバード大学だけが私を受け入れてくれたので、そこに行きました。

それが起こった瞬間、あるいは具体的な瞬間があったのかさえ覚えていないが、大学院の1年目に、当時実践されていたAIがでっち上げであることに気づいた。これは、「犬が椅子に座っている」と言われたプログラムがそれを何らかの正式な表現に変換し、知っていることのリストに追加する一種の AI のことを指します。

これらのプログラムが実際に示したのは、自然言語には形式言語であるサブセットが存在するということでした。しかし、非常に適切なサブセットです。彼らができることと実際に自然言語を理解することの間には、埋められないギャップがあることは明らかでした。実際、それは単に SHRDLU にもっと多くの言葉を教えるというだけの問題ではありませんでした。概念を表す明示的なデータ構造を使用して AI を実行する方法全体が機能することはありませんでした。よくあることですが、その破損により、それに適用できるさまざまな絆創膏について論文を書く機会がたくさん生まれましたが、マイクはそれを気にすることはありませんでした。

そこで私は自分の計画の残骸から何を取り戻せるかを探し回ったところ、Lisp が見つかりました。私は経験から、Lisp が AI との関連性だけでなく、それ自体が興味深いことを知っていました。それが当時人々が Lisp に注目する主な理由であったにもかかわらずです。そこで私は Lisp に焦点を当てることにしました。実際、私は Lisp ハッキングに関する本を書くことにしました。この本を書き始めたとき、私が Lisp ハッキングについてどれほど知識がなかったかを考えると恐ろしいです。しかし、何かを学ぶのに役立つ本を書くことほど素晴らしいことはありません。『On Lisp』という本は 1993 年まで出版されませんでしたが、私はその大部分を大学院で書きました。

コンピューター サイエンスは、理論とシステムという 2 つの部分の間の不安定な連携です。理論は人々が物事を証明し、システムは人々が物事を構築します。物を作りたかったのです。私は理論に対して十分な敬意を持っていましたが、理論のほうがより優れているのではないかと密かに疑っていましたが、ものを構築することのほうがはるかにエキサイティングに思えました。

しかし、システムの動作に関する問題は、それが長続きしないことでした。あなたが今日書いたプログラムは、どんなに優れたものであっても、せいぜい数十年後には陳腐化してしまうでしょう。脚注であなたのソフトウェアについて言及する人はいるかもしれませんが、実際にそれを使用する人は誰もいません。そして確かに、それは非常に弱い仕事のように思えるでしょう。この分野の歴史を知っている人だけが、当時はそれが良かったことにさえ気づくでしょう。

ある時点で、余剰のゼロックス タンポポがコンピュータ ラボの周りに漂っていました。遊んでみたい人は誰でも持つことができます。私も一瞬誘惑に駆られましたが、現在の標準からすると非常に遅かったです。何がポイントだったのでしょうか？他の誰もそれを欲しがらなかったので、彼らは去りました。それがシステムの仕事に起こったことです。

ただ物を作るだけではなく、長く残るものを作りたいと思っていました。

この不満の残る状態で、私は 1988 年に CMU のリッチ・ドレーブスを訪ねました。彼は大学院に通っていたのです。ある日、私は子供の頃に多くの時間を過ごしたカーネギー研究所を訪問しました。そこで絵を見ていて、当たり前のことのようですが、私にとって大きな驚きに気づきました。まさに壁に、長持ちするものを作ることができるものがありました。絵画は時代遅れではありませんでした。最高のものの中には数百年前のものもありました。

そしてさらに、これはあなたが生計を立てることができることでした。もちろん、ソフトウェアを書くほど簡単ではありませんが、本当に勤勉で本当に安い生活をしているのであれば、生きていくのに十分な収入が得られるはずだと思いました。そしてアーティストとして、真に独立することができます。上司もいないし、研究資金を得る必要もありません。

もともと絵を見るのが好きでした。作ってもいいでしょうか？わからなかった。それが可能であるとは想像もしていませんでした。人間が芸術を作ること、それが自然発生的に現れるものではないことは頭ではわかっていましたが、まるでそれを作った人々が別の種族であるかのようでした。彼らは大昔に生きていたか、ライフ誌のプロフィールで奇妙なことをしている謎の天才だった。実際に芸術を作ることができ、その動詞をその名詞の前に置くというアイデアは、ほとんど奇跡のように思えました。

その秋、私はハーバード大学で美術の授業を受け始めました。大学院生はどの学部の授業も受けることができ、私の指導教官であるトム・チーザムはとても気さくな人でした。私が受講している奇妙な授業のことを知っていても、彼は何も言いませんでした。

それで今、私はコンピューターサイエンスの博士課程に在籍していましたが、アーティストになるつもりでありながら、Lisp のハッキングに心から恋をしていて、On Lisp で働いていました。言い換えれば、多くの大学院生と同じように、私は論文ではない複数のプロジェクトに精力的に取り組んでいたのです。

この状況から抜け出す方法が見つかりませんでした。大学院を中退したくなかったのですが、他にどうやって大学院から抜け出すことができたのでしょうか？私の友人のロバート・モリスが、1988 年にインターネット ワームを書いたためにコーネル大学から追い出されたとき、彼が大学院を卒業するための素晴らしい方法を見つけたことが羨ましかったのを覚えています。

そして1990年4月のある日、壁に亀裂が生じました。私はチーザム教授に偶然会い、その年の6月に卒業できるほど進んでいるかと尋ねました。論文は一言も書かれていませんでしたが、人生で最も素早く考えた瞬間だったと思います。締め切りまでに残った 5 週間ほどでパーツを再利用して論文を書いてみることにしました。可能な限り On Lisp の質問をすると、目に見える遅れもなく「はい、そう思います。数日以内に何か読むものを差し上げます。」と答えることができました。

継続の応用をテーマに選びました。今にして思えば、マクロと組み込み言語について書くべきでした。そこには、ほとんど探検されていない世界が広がっています。しかし、私が望んでいたのは大学院を卒業することだけでした。急いで書き上げた論文だけで、かろうじて十分でした。

その間、私は美術学校に応募していました。私は米国の RISD とフィレンツェの Accademia di Belli Arti の 2 つに応募しました。最も古い美術学校だったので、ここが良いだろうと想像していました。RISD は私を受け入れてくれましたが、アカデミアからは返事がなかったので、プロビデンスへ向かいました。

私は RISD の BFA プログラムに応募していましたが、これは事実上、もう一度大学に行かなければならないことを意味していました。これは、思われているほど奇妙ではありませんでした。私はまだ 25 歳で、美術学校にはさまざまな年齢の人が集まっていたからです。RISDは私を転校2年生として数え、その夏に基礎をやらなければならないと言った。基礎とは、デッサン、色彩、デザインなどの基礎的な科目を全員が受講する授業のことです。

夏の終わり頃、私は大きな驚きを受け取りました。アカ​​デミアから、マサチューセッツ州ケンブリッジではなくイングランドケンブリッジに送ったため遅れていたのですが、その秋にフィレンツェで入学試験を受けるよう私を招待する手紙が届きました。それまであとわずか数週間となった。私の素敵な女将さんは、私の荷物を屋根裏部屋に置いて行かせてくれました。大学院でコンサルティングの仕事をしてお金を貯めていました。安く住めればおそらく1年は十分に過ごせるだろう。あとはイタリア語を勉強するだけでした。

この入学試験はストラニエリ（外国人）のみが受けなければなりませんでした。今にして思えば、これは彼らを排除する方法だったのかもしれません。フィレンツェで美術を学ぶという考えに惹かれたストラニエリが非常に多かったので、さもなければイタリア人学生の数が多かったはずだからです。その夏、私は RISD の基礎から絵を描いたり絵を描いたりすることはそこそこできましたが、どうやって筆記試験に合格できたのかはまだわかりません。エッセイの質問にセザンヌについて書くことで答え、限られた語彙を最大限に活用するために知的レベルを可能な限り高めたことを覚えています。[2]

私はまだ25歳までですが、すでにそのような顕著なパターンがあります。ここで私は、またしても、何か権威ある学問について学ぶことを期待して、8月の教育機関に出席しようとしていたのに、またしても失望しそうになっていた。アカデミアの絵画科の学生と教員は、あなたが想像できる限り最も良い人たちでしたが、彼らはとっくの昔に、学生は教員に何も教えることを要求せず、その代わり教員も何も教えることを要求しないという取り決めに達していました。生徒たちは何でも学ぶことができます。そして同時に、関係者全員が外面的には 19 世紀のアトリエの慣例に従うことになります。実際、私たちは 19 世紀のスタジオの絵画に見られるような、焚き火を入れた小さなストーブの 1 つと、火傷をしないようにできるだけ近くに座っているヌードモデルを用意していました。私以外に彼女を描いた人はほとんどいませんでした。残りの生徒たちは、おしゃべりをしたり、時にはアメリカのアート雑誌で見たものの真似をしたりして時間を過ごしました。

私たちのモデルは、私の家のすぐ近くに住んでいることが判明しました。彼女は地元の骨董品商のためにモデルと偽物の制作を組み合わせて生計を立てていました。彼女は本から無名な古い絵をコピーし、それから彼はそのコピーを取り出して、それを古く見えるように虐待しました。[3]

アカデミアの学生だったときに描き始めた絵は、今でも夜になると寝室にあります。部屋が狭かったことと、当時私に余裕があった残りのキャンバスの端材に描いたため、これらの絵は小さかったです。静物画は人物を描くのとは異なり、その名の通り被写体は動くことができません。人は一度に約 15 分以上座ることができず、座っていてもあまりじっとしていません。したがって、人物を描くための伝統的な手順は、一般的な人物を描く方法を知り、それを、描いている特定の人物に合わせて修正することです。一方、静物画では、必要に応じて、見ているものをピクセルごとにコピーできます。もちろん、そこで止まりたくはありません。さもなければ、写真の正確さだけが得られます。そして、静物画を面白くするのは、それが頭を通過していることです。たとえば、ある時点で色が突然変化するのは、それがオブジェクトの端であるためであるという視覚的な手がかりを強調したいとします。そういったものを微妙に強調することで、比喩的な意味だけでなく、厳密な情報理論的な意味でも写真よりも写実的な絵画を作ることができます。[4]

自分が見ているものに興味があったので、静物画を描くのが好きでした。日常生活では、私たちは自分が見ているものに意識的に気づいていません。ほとんどの視覚認識は低レベルのプロセスによって処理され、最も明るい点と最も暗い点がどこにあるかなどの詳細を伝えることなく、単に「これは水滴だ」と脳に伝えるだけであり、すべての葉の形や位置を伝えることなく「あれは茂みだ」と伝えるだけです。 。これは脳の特性であり、バグではありません。日常生活では、すべての茂みのすべての葉に注目するのは気が散るでしょう。しかし、何かを描かなければならないときは、もっと注意深く見なければなりません、そして、そうするとき、見るべきものがたくさんあります。人々が通常当たり前だと思っているものについて何日もエッセイを書こうと試みた後と同じように、人々が通常当たり前だと思っているものを何日も描いてみても、新しいことに気づくことがあります。

塗装方法はこれだけではありません。それが良いペイント方法であるかどうかは 100% わかりません。しかし、それは試してみる価値がある十分な賭けであるように思えた。

私たちの先生、ウリヴィ教授はいい人でした。彼は私が一生懸命勉強したのを見て、良い成績をくれたので、それを各生徒が持つパスポートのようなものに書き留めてくれました。しかし、アカデミアではイタリア語以外は何も教えてくれず、お金もなくなってしまったので、1年目の終わりにアメリカに戻りました。

RISDに戻りたかったのですが、現在破産しており、RISDの学費は非常に高かったため、1年間就職して翌年の秋にRISDに戻ることにしました。私が購入したのは、文書作成用のソフトウェアを製造する Interleaf という会社でした。Microsoft Word のようなものですか? その通り。それで、ローエンドのソフトウェアがハイエンドのソフトウェアを食いつぶす傾向があることを知りました。しかし、Interleaf にはまだ数年の命が残されていました。[5]

Interleaf はかなり大胆なことを行っていました。Emacs に触発されて、彼らはスクリプト言語を追加し、さらにそのスクリプト言語を Lisp の方言にしました。そこで彼らは、Lisp ハッカーに何かを書いてもらいたいと考えていました。これは私が通常の仕事に最も近い行動でした。私は悪い従業員だったため、ここに上司と同僚に謝罪します。彼らの Lisp は、巨大な C ケーキの最も薄い飾りでした。私は C を知らなかったし、学びたくなかったので、ソフトウェアのほとんどを理解することができませんでした。それに、私はひどく無責任でした。これは、プログラミングの仕事が毎日特定の勤務時間内に出勤することを意味していた時代のことです。それは私には不自然に思えましたし、この点に関しては世界も私の考えに同調しつつありますが、当時はそれが大きな摩擦を引き起こしていました。年末に向けて、私は密かに On Lisp の開発に多くの時間を費やし、その頃には出版の契約も得ていました。

良かった点は、特に美大生の基準からすると、多額の給料をもらえたことです。フィレンツェでは、家賃の一部を支払った後、その他の予算は 1 日あたり 7 ドルでした。今では、会議に座っているだけのときでも、時給ごとにその 4 倍以上の報酬を受け取ることができました。安く生活することで、RISD に戻るのに十分な貯蓄ができただけでなく、大学のローンも返済できました。

Interleaf では役に立つことをいくつか学びましたが、そのほとんどはしてはいけないことに関するものでした。テクノロジー企業は営業担当者よりも製品担当者が経営するほうが良いこと、(営業は本当のスキルであり、それが得意な人は本当に上手です)、コードを編集する人が多すぎるとバグが発生することを学びました。憂鬱な気分であれば、安いオフィススペースはお買い得ではないこと、計画された会議は廊下での会話よりも劣っていること、官僚的な大口顧客は危険な資金源であること、従来のオフィス時間とハッキングに最適な時間はあまり重ならないこと、または従来のオフィスとそれに最適な場所。

しかし、私が学んだ最も重要な点は、Viaweb と Y Combinator の両方で使用したことですが、ローエンドがハイエンドを食い込むということです。たとえ権威が低くても、「エントリー レベル」のオプションであることが良いということです。あなたがそうでなければ、他の誰かがそうなって、あなたを天井に押しつぶすでしょう。つまり、名声は危険の兆候であるということになります。

翌年の秋に RISD に戻るために退職したとき、私は顧客向けのプロジェクトを行うグループでフリーランスの仕事をする手配をし、そうしてその後数年間は生き延びることができました。その後、私がプロジェクトのために再び訪問したとき、ある人が HTML と呼ばれる新しいものについて教えてくれました。彼が説明したように、これは SGML の派生です。Interleaf ではマークアップ言語の愛好家は職業上の危険であり、私は彼を無視していましたが、この HTML のことは後に私の人生の大きな部分を占めるようになりました。

1992 年の秋、私は RISD で続けるためにプロビデンスに戻りました。財団は単なる導入部のものであり、アカデミアは（非常に文明的な）ジョークでした。今度は実際の美術学校がどのようなものか見てみようと思いました。しかし、悲しいことに、それはアカデミアに似ていたというよりも。確かに組織化はより良くなり、費用もはるかに高くなりましたが、美術学校と芸術との関係は、医科大学と医学の関係と同じではないことが明らかになりつつありました。少なくとも絵画部門ではない。隣の家が所属していた繊維部門はかなり厳しいようでした。イラストレーションや建築もそうだったに違いありません。しかし、絵を描くことは厳密なものでした。絵画を学ぶ学生は自分自身を表現することになっており、より世俗的な学生にとって、それはある種の独特の特徴的なスタイルを作り上げようとすることを意味していました。

特徴的なスタイルとは、ショービジネスで「シュティック」として知られるものに視覚的に相当するもので、作品が他の人のものではなく自分のものであることを即座に識別するものです。たとえば、ある種の漫画に似た絵を見ると、それがロイ リキテンスタインの作であることがわかります。したがって、ヘッジファンドマネージャーのアパートにこの種の大きな絵がかかっているのを見たら、彼がそれに何百万ドルも支払ったことがわかります。アーティストが独自のスタイルを持っているのは必ずしもそれが理由ではありませんが、通常、バイヤーがそのような作品に高額を支払うのはそれが理由です。[6]

熱心な生徒もたくさんいました。高校時代に「絵を描くことができた」子供たちは、今ではさらに上手に絵を描くことを学ぶために、国内最高の美術学校であるはずの学校に来ていました。彼らはRISDで見つけたものに混乱し、意気消沈する傾向がありましたが、絵を描くことが彼らの仕事だったため、彼らは進み続けました。私は高校時代は絵を描くことができる子供の一人ではありませんでしたが、RISDでは、特徴的なスタイルを求める部族よりも間違いなく彼らの部族に近かったのです。

RISD で受講した色のクラスでは多くのことを学びましたが、それ以外は基本的に独学で絵を描くことを学び、それは無料で行うことができました。それで1993年に中退しました。プロビデンスを少しぶらぶらしていたら、大学時代の友人のナンシー・パーメットが私に大きな好意を寄せてくれました。彼女の母親がニューヨークで所有していた建物内にある家賃管理付きのアパートが空室になりつつあった。欲しかったんですか？それは私の現在の場所以上のものではなく、ニューヨークはアーティストたちがいる場所であるはずでした。そうそう、欲しかったんです！[7]

アステリックスのコミックは、ローマ人の支配下にないことが判明したローマ時代のガリアの小さな一角にズームインすることから始まります。ニューヨーク市の地図でも同様のことができます。アッパー イースト サイドを拡大すると、裕福ではない、または少なくとも 1993 年には存在しなかった小さな一角があります。そこはヨークビルと呼ばれており、そこが私の新しい家でした。今、私はニューヨークのアーティストになっていました。絵を描き、ニューヨークに住んでいるという厳密に技術的な意味でのことです。

インターリーフが衰退しつつあるのを感じていたので、お金のことについては不安でした。フリーランスの Lisp のハッキングの仕事は非常にまれで、当時は運が良ければ C++ を意味していたであろう別の言語でプログラムする必要があったとは思いませんでした。そこで、私は経済的チャンスを逃さないという嗅覚を活かして、Lisp に関する別の本を書くことにしました。これは教科書としても使えるような、人気の本だろう。印税を切り詰めて倹約生活を送り、絵を描くことにすべての時間を費やしている自分を想像しました。(この本の表紙の絵、ANSI Common Lisp は、私がこの頃に描いたものです。)

私にとってニューヨークで一番良かったのは、イデルとジュリアン・ウェバーの存在でした。イデル・ウェーバーは初期のフォトリアリストの一人である画家で、私はハーバード大学で彼女の絵画のクラスを受講していました。これほど生徒たちに愛されている教師を私は知りません。私を含め、多くの元生徒たちが彼女と連絡を取り続けていました。ニューヨークに引っ越した後、私は彼女の事実上のスタジオアシスタントになりました。

彼女は、一辺が 4 ～ 5 フィートの大きな正方形のキャンバスに絵を描くのが好きでした。1994年後半のある日、私がこれらのモンスターの1つをストレッチしていたとき、ラジオで有名なファンドマネージャーに関する何かが流れました。彼は私よりそれほど年上ではなく、とても裕福でした。突然、私は「なぜお金持ちにならないのか？」という考えが頭に浮かびました。そうすれば、自分のやりたいことに取り組むことができるようになります。

その間、私は World Wide Web と呼ばれるこの新しいものについて聞くことが増えてきました。ロバート・モリスは、現在ハーバード大学の大学院に通っているケンブリッジを訪ねたときに、それを私に見せてくれました。ウェブは大変なことになると私には思えました。私は、グラフィカル ユーザー インターフェイスがマイクロコンピューターの普及にどのような影響を及ぼしたかを見てきました。ウェブでもインターネットでも同じことができるように思えました。

もし私が金持ちになりたければ、ここが駅を発車する次の電車だった。その部分に関しては正しかったです。私が間違っていたのはそのアイデアでした。私は、アート ギャラリーをオンラインに公開する会社を立ち上げるべきだと決心しました。非常に多くの Y Combinator アプリケーションを読んだ後では、これが史上最悪のスタートアップのアイデアだったとは正直言えませんが、それは存在しました。高級ギャラリーではなく、アート ギャラリーはオンラインになることを望んでいませんでしたし、今もオンラインでは望んでいません。それは彼らの売り方ではありません。私はギャラリー用の Web サイトを生成するソフトウェアをいくつか書き、ロバートは画像のサイズを変更し、ページを提供するための http サーバーをセットアップするソフトウェアを書きました。次に、ギャラリーに登録してみました。これを売却するのは難しいと言っても過言ではないでしょう。譲るのが大変でした。いくつかのギャラリーは無料でサイトを作成させてくれましたが、お金を払ってくれたギャラリーはありませんでした。

その後、いくつかのオンライン ストアが登場し始めましたが、注文ボタンを除けば、私たちがギャラリー用に作成していたサイトと同じであることに気づきました。「インターネット ストアフロント」と呼ばれるこの印象的な響きのものは、私たちが構築方法をすでに知っていたものでした。

そこで 1995 年の夏、私が ANSI Common Lisp のカメラ対応コピーを出版社に提出した後、私たちはオンライン ストアを構築するソフトウェアを作成しようと試み始めました。当初、これは通常のデスクトップ ソフトウェア (当時は Windows ソフトウェアを意味していました) になる予定でした。私たち二人とも Windows ソフトウェアの書き方を知らなかったし、学ぶ気もなかったため、これは憂慮すべき事態でした。私たちは Unix の世界に住んでいました。しかし、私たちは少なくとも Unix 上でプロトタイプのストア ビルダーを書いてみることにしました。ロバートはショッピング カートを書き、私は店舗用の新しいサイト ジェネレーターを書きました (もちろん Lisp で)。

私たちはケンブリッジにあるロバートのアパートで仕事をしていました。彼のルームメイトはかなりの期間不在でしたが、その間私は彼の部屋で寝ることになりました。なぜかベッドフレームやシーツはなく、床にはマットレスが敷かれているだけでした。ある朝、このマットレスに横たわっているときに、私を大文字の L のように座らせたアイデアが浮かびました。サーバー上でソフトウェアを実行し、ユーザーがリンクをクリックすることでそれを制御できるようにしたらどうなるでしょうか? そうすれば、ユーザーのコンピュータ上で実行するために何かを記述する必要はなくなります。サービスを提供するのと同じサーバー上にサイトを生成できます。ユーザーはブラウザ以外に何も必要としません。

Web アプリとして知られるこの種のソフトウェアは、今では一般的ですが、当時はそれが可能であるかどうかさえ明確ではありませんでした。それを知るために、ブラウザを通じて制御できるバージョンのストア ビルダーを作成してみることにしました。数日後の 8 月 12 日には、うまくいくものがありました。UI はひどいものでしたが、クライアント ソフトウェアを使用したり、サーバー上のコマンド ラインに何も入力したりしなくても、ブラウザーを介してストア全体を構築できることが証明されました。

今、私たちは本当に何かを掴んでいるような気がしました。私は、まったく新しい世代のソフトウェアがこのように動作するというビジョンを持っていました。バージョンやポートなど、そんなくだらないものは必要ありません。Interleaf には、リリース エンジニアリングと呼ばれるグループ全体があり、実際にソフトウェアを作成したグループと少なくとも同じくらい大きいように見えました。これで、サーバー上でソフトウェアを直接更新できるようになりました。

私たちのソフトウェアがウェブ経由で動作するという事実にちなんで、私たちは Viaweb と呼ばれる新しい会社を設立し、Idelle の夫 Julian から 10,000 ドルのシード資金を得ました。その見返りとして、最初の法務業務を遂行し、私たちにビジネス上のアドバイスを提供することとして、私たちは彼に会社の 10% を与えました。10 年後、この取引は Y Combinator のモデルとなりました。私たち自身も必要としていたので、創業者がこのようなものを必要としていることはわかっていました。

この段階では、私の純資産はマイナスでした。銀行に預けていた千ドルほどのお金が、政府に支払わなければならない税金と釣り合って余りあったからです。(私は Interleaf のコンサルティングで稼いだお金の適切な割合を熱心に取っておきましたか? いいえ、そうではありませんでした。) したがって、ロバートには大学院生の奨学金がありましたが、私は生活していくためにそのシード資金が必要でした。

当初は 9 月にリリースしたいと考えていましたが、作業を進めるうちにソフトウェアに対する意欲が高まりました。最終的に、私たちは WYSIWYG サイト ビルダーを構築することができました。つまり、ページを作成しているときに、ページは後で生成される静的なページとまったく同じように見えます。ただし、リンクはすべて、静的なページにつながるのではなく、サーバー上のハッシュ テーブル。

オンライン ストア ビルダーの主な目標はユーザーを正当に見せることであり、正当に見せるための鍵は高い生産価値にあるため、アートを勉強していたことは役に立ちました。ページのレイアウト、フォント、色を正しく設定すれば、寝室で店を経営している男性を大企業よりも正当に見せることができます。

(私のサイトがなぜそんなに古風に見えるのか知りたい方は、このソフトウェアを使用して作られているからです。今では不格好に見えるかもしれませんが、1996 年にはそれが洗練された最後の言葉でした。)

9月にロバートは反乱を起こした。「私たちはこれに1か月間取り組んできましたが、まだ完了していません。」と彼は言いました。振り返ってみると、これは面白いことです。なぜなら、彼はほぼ 3 年後もまだこの作品に取り組んでいたことになるからです。しかし私は、より多くのプログラマーを採用することが賢明かもしれないと判断し、ロバートに、同じ大学院で本当に優秀な人材は誰かと尋ねました。彼はトレバー・ブラックウェルを推薦しましたが、これには私は最初驚きました。なぜなら、その時点で私がトレバーのことを知っていたのは主に、人生のすべてをメモカードの束に落とし込み、それを持ち歩くという彼の計画だったからです。しかし、いつものように Rtm は正しかった。トレバーは恐ろしいほど有能なハッカーであることが判明しました。

ロバートとトレバーと一緒に仕事をするのはとても楽しかったです。彼らは私が知っている中で最も独立心を持った二人で、まったく異なる意味でした。もし Rtm の脳の中を見ることができたら、それは植民地時代のニューイングランドの教会のように見えるだろうし、もしトレバーの脳の中を見ることができたら、それはオーストリアのロココの最悪の行き過ぎのように見えるだろう。

私たちは 1996 年 1 月に 6 店舗で営業を開始しました。遅れるのではないかと心配していましたが、実際には致命的に早かったので、数か月待ったのも良かったです。当時、マスコミでは e コマースについて多くの話題が取り上げられていましたが、実際にオンライン ストアを希望する人は多くありませんでした。[8]

このソフトウェアには 3 つの主要な部分がありました。エディター (人々がサイトを構築するために使用し、私が作成したもの)、ショッピング カート (ロバートが作成したもの)、およびマネージャー (注文と統計を追跡し、トレバーが作成したもの) です。当時、このエディタは最高の汎用サイト ビルダーの 1 つでした。私はコードを厳密に保ち、Robert と Trevor 以外の他のソフトウェアと統合する必要がなかったので、作業するのはとても楽しかったです。このソフトウェアに取り組むだけだったら、その後の 3 年間は人生で最も楽だったでしょう。残念なことに、私はもっとたくさんのことをしなければなりませんでしたが、そのすべてがプログラミングよりも苦手なものばかりで、その後の 3 年間はむしろ最もストレスの多いものでした。

90 年代後半には、e コマース ソフトウェアを開発するスタートアップがたくさんありました。私たちは Interleaf ではなく Microsoft Word になることを決意しました。つまり、使いやすく、安価であるということです。私たちが貧乏だったのは幸運でした。なぜなら、そのおかげで Viaweb が思っていたよりもさらに安くなったからです。小規模な店舗には月額 100 ドル、大きな店舗には月額 300 ドルを請求しました。この低価格は大きな魅力であり、競合他社にとって常に悩ましい問題でしたが、私たちが価格を低く設定したのは賢明な洞察があったからではありません。企業が何にお金を払っているのか全く分かりませんでした。私たちにとって月額 300 ドルは大金に思えました。

私たちはそのように偶然に多くのことをうまくやりました。たとえば、私たちは今でいうところの「スケールしないことをやっている」ことをしましたが、当時はそれを「ユーザーを獲得するために必死の策に駆られるほど怠惰だ」と表現していました。最も一般的なのは、店舗の建設でした。私たちのソフトウェアの存在意義は、人々がそれを使って独自のストアを作成できることにあったため、これは特に屈辱的なことのように思えました。しかし、ユーザーを獲得するためなら何でも。

私たちは小売業について、知りたかった以上に多くのことを学びました。たとえば、男性のシャツの小さな画像しか持てない場合 (そして当時の標準ではすべての画像が小さかった)、シャツ全体の写真よりも襟のクローズアップの方が良いとします。私がこれを学んだ理由は、男性用シャツの約 30 枚の画像を再スキャンする必要があったからです。私の最初のスキャンセットもとても美しかったです。

これは間違っていると感じましたが、それはまさに正しいことだったのです。ユーザー向けのストアを構築することで、私たちは小売業について、そしてソフトウェアを使用することがどのように感じられるかを学びました。私は当初、「ビジネス」というものに戸惑い、反発し、それを担当するには「ビジネスマン」が必要だと考えていましたが、ユーザーを獲得し始めると、かつて私が父親として改心したのと同じように改心しました。子供がいました。ユーザーが何を望んでいても、私はすべて彼らのものでした。おそらくいつか、ユーザーが多すぎて画像をスキャンできなくなる日が来るかもしれませんが、それまでは、これ以上に重要なことは何もありませんでした。

当時私が理解できなかったもう 1 つのことは、成長率がスタートアップにとっての究極のテストであるということです。成長率は順調でした。1996年末には約70店舗、1997年末には約500店舗がありました。重要なのはユーザーの絶対数だと誤解していました。そして、それがどれだけのお金を稼いでいるのかという意味で重要であり、十分に稼いでいない場合は廃業する可能性があります。しかし長期的には、成長率が絶対数を考慮します。もし私たちが Y Combinator でアドバイスしていたスタートアップだったら、こう言っただろう。「あなたは元気だから、そんなにストレスを感じるのはやめてください」。1年で7倍も成長しているんですね。あまりにも多くの人を雇わないでください。そうすれば、すぐに利益が得られます。そうすれば、自分の運命をコントロールできるようになります。

残念ながら、私はさらに多くの人を雇いました。投資家が私にそれを望んでいたからでもありますし、インターネットバブルの時に新興企業がそうしたことだったからでもあります。従業員が数人しかいない会社は素人っぽく見えたでしょう。そのため、1998 年の夏に Yahoo が当社を買収するまで損益分岐点に達しませんでした。つまり、当社は会社の存続期間を通じて投資家のなすがままになることを意味しました。そして、私たちも投資家もスタートアップの初心者だったため、結果はスタートアップの基準から見てもひどいものでした。

Yahoo が当社を買収したときは、とても安心しました。基本的に、Viaweb の在庫は貴重でした。それは、収益性が高く、急速に成長しているビジネスの株でした。しかし、私にとってそれはあまり価値のあるものとは思えませんでした。ビジネスをどのように評価すればよいのか全く分かりませんでしたが、数カ月ごとに臨死体験をしていることは痛感していました。また、大学院生としての生活を始めてから大きく変えることもありませんでした。だから、ヤフーが私たちを買収したときは、ぼろぼろから金持ちになったような気分でした。カリフォルニアに行く予定だったので、黄色の 1998 年製 VW GTI という車を購入しました。その革張りのシートだけでも、私が所有していたものの中で最も贅沢なものだと思ったのを覚えています。

翌年、1998 年の夏から 1999 年の夏にかけては、私の人生の中で最も生産性の低い年だったに違いありません。当時は気づいていませんでしたが、Viaweb を運営する労力とストレスで疲れ果てていました。カリフォルニアに到着してからしばらくの間、私はいつものように午前 3 時までプログラミングを続けようとしましたが、Yahoo の早すぎる文化とサンタ クララの厳粛なキューブ ファームと相まって、疲労が徐々に私を引きずっていきました。数か月後、まるで Interleaf で働いているような気がして当惑しました。

Yahoo は私たちを買収したときに、多くのオプションを提供してくれました。当時、Yahoo は過大評価されすぎて何の価値もないだろうと思っていましたが、驚いたことにその株価は翌年に 5 倍に上昇しました。私はオプションの最初の部分が確定するまで粘りましたが、1999 年の夏に退職しました。絵を描くのが久しぶりだったので、なぜこれをやっているのか半分忘れていました。4年間、私の頭の中はソフトウェアとメンズシャツのことでいっぱいでした。でも、私はお金持ちになって絵を描けるようにするためにこれをしたのだと自分に言い聞かせました。今ではお金持ちになったので、絵を描きに行こうと思いました。

私が退職すると言ったとき、Yahoo の上司は私の計画について長い間私と話し続けました。私は彼に、自分が描きたい絵の種類についてすべて話しました。その時、私は彼が私にとても興味を持ってくれたことに感動しました。今となっては、それは彼が私が嘘をついていると思ったからだと気づきました。その時点での私のオプションは月に約200万ドル相当でした。そんなにお金をテーブルの上に残しておくとしたら、新しいスタートアップを立ち上げるしかないでしょうし、もしそうするなら、人々を連れて行くかもしれません。当時はインターネット バブルの最盛期で、Yahoo はその爆心地でした。私の上司はその瞬間億万長者でした。そこを離れて新しいスタートアップを立ち上げるというのは、彼にとっては非常識でありながら、もっともらしい野心的な計画に思えたに違いない。

でも、本当に絵を描くのをやめようとしていたので、すぐに描き始めました。一刻の猶予もありませんでした。私はすでに4年間を費やして金持ちになりました。今、会社を売却して退職する創業者たちと話すとき、私のアドバイスはいつも同じです。「休暇を​​とりなさい」です。それは私がすべきことだった、ただどこかに行って、1、2か月間何もせずに過ごしただけだったのですが、その考えは私には思いつきませんでした。

それで絵を描こうとしたんですが、全然エネルギーも野心もなかったんです。問題の一部は、カリフォルニアにあまり知り合いがいなかったことです。私はサンタクルーズ山脈に家を購入しましたが、美しい景色はありますが、どこからでも何マイルも離れていて、この問題をさらに悪化させました。私はさらに数ヶ月我慢しましたが、自暴自棄になってニューヨークに戻りました。家賃管理について理解していない限り、私が昔の生活の墓のように封印されたまま、まだアパートを持っていたと聞くと驚くでしょう。イデルは少なくともニューヨークにいましたし、私は誰も知りませんでしたが、そこで絵を描こうとしている人たちは他にもいました。

ニューヨークに戻ったとき、私は裕福になったことを除いて、以前の生活を再開しました。聞こえるほど奇妙でした。私は以前のパターンをすべて再開しましたが、今までなかったところにドアができました。今では歩き疲れたら手を挙げれば（雨が降っていなければ）タクシーが止まって迎えに来てくれました。さて、魅力的な小さなレストランの前を歩いていると、入ってランチを注文することができました。しばらくは興奮しました。絵も上手くなり始めました。私は新しい種類の静物画を実験しました。古い方法で 1 つの絵を描き、それを写真に撮り、拡大してキャンバスに印刷し、それを元の絵から描いた 2 番目の静物の下絵として使用します。同じ物体です（まだ腐っていないといいのですが）。

その間、私は購入するアパートを探していました。これで、実際にどの地域に住むかを選択できるようになりました。私は自分自身とさまざまな不動産業者に尋ねました。ニューヨークのケンブリッジはどこですか? 実際のケンブリッジを時々訪れることで、私は徐々に、ケンブリッジが存在しないことに気づきました。はぁ。

2000 年の春のこの頃、私はあるアイデアを思いつきました。Viaweb での経験から、Web アプリが未来であることは明らかでした。Webアプリを作るためにWebアプリを構築してみませんか？ブラウザを介してサーバー上のコードを編集して、結果として得られるアプリケーションをホストできるようにしてはどうでしょうか? [9] API 呼び出しを行うだけで、これらのアプリケーションが使用できるサーバー上で、電話の発着信、画像の操作、クレジット カードでの支払いなど、あらゆる種類のサービスを実行できます。

このアイデアに興奮しすぎて、他のことは考えられなくなりました。これが未来であることは明らかだった。特に別の会社を立ち上げたかったわけではありませんでしたが、このアイデアは一つの会社として具体化する必要があることは明らかだったので、ケンブリッジに移住して会社を立ち上げることにしました。ロバートを誘って一緒に取り組んでもらいたかったのですが、そこで問題が発生しました。ロバートは現在 MIT のポスドクで、前回私が彼を誘惑して私の計画の 1 つに取り組んだとき、彼は大金を稼いでいましたが、それはまた大きな時間の浪費でもありました。そのため、彼はそれがもっともらしいアイデアのように聞こえることには同意しましたが、それに取り組むことを断固として拒否しました。

ふーん。そうですね、それなら自分でやります。私は、Viaweb で働いていた Dan Giffin と、夏の仕事を希望していた 2 人の学部生を採用し、現在明らかになっている約 20 社といくつかのオープンソース プロジェクトに相当するソフトウェアの構築に取り組み始めました。アプリケーションを定義するための言語は、もちろん Lisp の方言になります。しかし、私は一般の聴衆に対してあからさまな Lisp を生み出すことができると考えるほど単純ではありませんでした。ディランのように括弧を非表示にします。

その頃には、Viaweb がどのような会社かを表す名前が「アプリケーション サービス プロバイダー」 (ASP) として存在していました。この名前は、「サービスとしてのソフトウェア」に置き換えられるまで長くは続きませんでしたが、十分長く使われていたため、私はこの新しい会社にその名前を付けました。この名前は Aspra と呼ばれる予定でした。

私はアプリケーション ビルダーに取り組み始め、ダンはネットワーク インフラストラクチャに取り組み、学部生 2 人は最初の 2 つのサービス (画像と電話) に取り組みました。しかし、夏の半ば頃、私は本当に会社を経営したくないことに気づきました。特に、そうしなければならないと思われていた大きな会社ではありませんでした。Viaweb を始めたのは単にお金が必要だったからです。もうお金は必要ないのに、なぜこんなことをしていたのでしょうか？このビジョンが会社として実現されなければならないのであれば、そのビジョンを台無しにしてください。私なら、オープンソース プロジェクトとして実行できるサブセットを構築します。

驚いたことに、この作業に費やした時間は結局無駄ではありませんでした。Y Combinator を開始してから、この新しいアーキテクチャの一部に取り組んでいるスタートアップに頻繁に遭遇しました。多くの時間を費やしてそれについて考え、その一部を作成しようとしたことは非常に有益でした。

私がオープンソース プロジェクトとして構築するサブセットは新しい Lisp で、今では括弧を隠す必要すらありません。多くの Lisp ハッカーは、新しい Lisp を構築することを夢見ています。その理由の 1 つは、この言語の際立った特徴の 1 つは、方言があることです。また、私たちの心の中には、既存の方言がすべて当てはまるという Lisp のプラトニック形式があるためだと思います。足りない。確かにそうでした。そこで夏の終わりに、ダンと私はケンブリッジに購入した家で、Arc と呼ばれるこの新しい Lisp 言語の開発に切り替えました。

翌年の春、雷が落ちました。私は Lisp カンファレンスで講演するように招待されたので、Viaweb で Lisp をどのように使用したかについて講演しました。その後、この講演の追記ファイルをオンラインの paulgraham.com に投稿しました。このファイルは、Viaweb を使用する何年も前に作成していましたが、何にも使用していませんでした。1日で30,000ページビューを達成しました。いったい何が起こったのでしょうか？参照 URL を見ると、誰かが Slashdot に投稿したことがわかりました。[10]

うわー、観客がいるなと思いました。私が何かを書いてウェブに公開すれば、誰でも読むことができます。今では当たり前のことかもしれませんが、当時は驚きでした。活字の時代には、読者への狭いチャネルがあり、編集者として知られる凶暴なモンスターによって守られていました。あなたが書いたものを読者に届ける唯一の方法は、本として出版されるか、新聞や雑誌に掲載されることです。今では誰でも何でも出版できるようになりました。

これは 1993 年から原理的には可能でしたが、まだ多くの人がそれに気づいていませんでした。私はそのほとんどの期間、ライターとしても Web のインフラストラクチャの構築に深く関わってきましたが、それに気づくまでに 8 年かかりました。それでも、その意味を理解するまでに数年かかりました。それは、まったく新しい世代のエッセイが生まれることを意味しました。[11]

活字の時代には、エッセイを出版するチャネルは消え去るほど小さかった。ニューヨークの適切な政党に出席した、正式に油そそがれた少数の思想家を除いて、エッセイの出版を許可されているのは、自分の専門分野について書いている専門家だけでした。出版する方法がなかったために、これまで書かれなかったエッセイがたくさんありました。今ならそうかもしれないし、私はそれを書こうとしていた。[12]

いくつかの異なることに取り組んできましたが、どのことに取り組むべきかを考えるターニングポイントがあったのは、エッセイをオンラインで公開し始めたときでした。それ以来、何をするにしても必ずエッセイを書くだろうと思いました。

当初、オンラインエッセイは限界のあるメディアになるだろうと思っていました。社会的には、ニューヨーカー誌に掲載された上品で美しく植字された文章よりも、狂人が GeoCities サイトに投稿した暴言のように見えるでしょう。しかし、この時点で私は、それが落胆するのではなく励みになることを十分に理解していました。

私がこれまでの人生で気づいた最も顕著なパターンの 1 つは、少なくとも私にとっては、名誉あることではないことに取り組むことがいかにうまくいったかということです。静物画は常に最も権威の低い絵画形式でした。Viaweb と Y Combinator は、開始した当初はどちらも不自由に思えました。私は今でも、見知らぬ人から何を書いているのかと尋ねられ、ウェブサイトに公開するエッセイであると説明すると、白い目で見られます。Lisp でさえ、ラテン語と同じように知的には名門ですが、流行に敏感なようにも見えます。

目立たないタイプの仕事それ自体が良いというわけではありません。しかし、現在は名声に欠けているにもかかわらず、ある種の作品に惹かれていることに気付いた場合、それはそこに何か本物が発見されているということと、あなたが正しい種類の動機を持っているという両方の兆候です。不純な動機は野心家にとって大きな危険です。何かがあなたを迷わせるとしたら、それは人々に感銘を与えたいという欲求でしょう。したがって、有名ではないことに取り組んでいても、正しい方向に進んでいるという保証はありませんが、少なくとも、よくある間違った方向に進んでいないことは保証されます。

それから数年間、私はあらゆる種類のさまざまなトピックについてたくさんのエッセイを書きました。オライリーは、それらのコレクションを書籍として再版し、その中のエッセイの 1 つにちなんで「Hackers & Painters」と題しました。スパムフィルターにも取り組み、さらにペイントも行いました。私は毎週木曜日の夜に友人のグループのためにディナーをしていたので、グループ向けの料理の仕方を学びました。そして私はケンブリッジにある別の建物、かつてはキャンディー工場だった建物（その後、ポルノスタジオだったと言われている）をオフィスとして購入しました。

2003年10月のある夜、私の家で盛大なパーティーが開かれました。これは、木曜日のディナーの一人だった友人のマリア・ダニエルズの賢いアイデアでした。3 人の別々のホストが全員、友人を 1 つのパーティーに招待します。つまり、すべてのゲストについて、他のゲストの 3 分の 2 は、知らないけれどおそらく気に入るであろう人々ということになります。ゲストの一人は、私は知りませんでしたが、後でとても好きになる人、ジェシカ・リビングストンという女性でした。数日後、私は彼女をデートに誘いました。

ジェシカはボストンの投資銀行でマーケティングを担当していました。この銀行はスタートアップを理解していると思っていましたが、翌年、スタートアップ業界の友人たちと会ううちに、現実がいかに異なっているかに驚きました。そして、彼らの物語はなんと色彩豊かなものだったのでしょうか。そこで彼女は、スタートアップの創業者へのインタビューを集めた本を編むことにしました。

銀行が財務上の問題を抱え、従業員の半数を解雇しなければならなかったとき、彼女は新しい仕事を探し始めました。2005 年の初めに、彼女はボストンの VC 会社でマーケティングの仕事の面接を受けました。彼らが決心するまでに数週間かかりましたが、この間、私はベンチャーキャピタルに関して修正する必要があるすべてのことを彼女に話し始めました。少数の巨大な投資ではなく、小規模な投資を多数行うべきであり、MBA の代わりに若くて技術力のある創業者に資金を提供すべきであり、創業者を CEO に留まらせるべきである、などなど。

エッセイを書くための私のコツの 1 つは、いつも講演をすることでした。大勢の人々の前に立って、時間を無駄にしない何かを伝えなければならないという考えは、想像力を大きく刺激します。学部生のコンピュータークラブであるハーバードコンピューター協会から講演を依頼されたとき、私は彼らにスタートアップの始め方を教えようと決心しました。おそらく彼らは私たちが犯した最悪の間違いを避けることができるでしょう。

そこで私はこの講演を行い、その過程でシード資金の最良の供給源は成功したスタートアップの創業者である、そうすればアドバイスの供給源にもなるからだと彼らに伝えました。すると、彼らは皆、期待を込めて私を見ているようでした。受信トレイが事業計画でいっぱいになるかもしれないという予想に恐怖を感じて（知っていれば）、「でも、私は違うよ！」と口走ってしまったのです。そして話を続けました。しかしその後、エンジェル投資について先延ばしにするのは本当にやめるべきだと思いました。Yahoo が当社を買収したときからそうしようと思っていましたが、7 年経った今でもまだ 1 件もエンジェル投資をしていませんでした。

その間、私はロバートとトレバーと、一緒に取り組めるプロジェクトについて計画を立てていました。彼らと一緒に仕事ができなくて寂しかったし、何か協力できることが必要だと思ったんだ。

3 月 11 日、ジェシカと私がディナーから帰宅する途中、ガーデン ストリートとウォーカー ストリートの角で、これら 3 つのスレッドが集まりました。決断するのに非常に長い時間を要したVCはがっかりだ。私たちは自分たちの投資会社を立ち上げ、話し合ってきたアイデアを実際に実行するつもりでした。私が資金を提供すれば、ジェシカは仕事を辞めてそのために働くことができ、ロバートとトレバーもパートナーとして迎え入れることができます。[13]

またしても、無知が私たちに有利に働きました。私たちはエンジェル投資家になる方法をまったく知りませんでしたし、2005 年のボストンには、学ぶべきロン・コンウェイもいませんでした。そこで私たちは、当然の選択と思われるものを選択しただけで、私たちが行ったことのいくつかは斬新であることが判明しました。

Y Combinator には複数のコンポーネントがありますが、一度にすべてを理解することはできませんでした。私たちが最初に獲得したのは、エンジェルファームになることでした。当時、この二つの言葉は合わなかった。投資を仕事とする人々が集まった組織的な会社であるVC会社もありましたが、彼らは100万ドル規模の巨額投資しか行いませんでした。また、小規模な投資を行うエンジェルもいましたが、これらは通常、他のことに集中し、副業で投資を行っていた個人でした。そして、どちらも当初は創業者を十分に支援しませんでした。私たちは、自分たちがどれほど無力だったかを思い出したため、ある面で創業者がどれほど無力であるかを知っていました。たとえば、ジュリアンが私たちにしてくれた、私たちにとって魔法のように思えたことの 1 つは、私たちを会社として設立させたことです。私たちはかなり難しいソフトウェアを書くのは問題ありませんでしたが、実際に法人化されて、定款や株式などの諸々が必要になったのですが、いったいどうやってそんなことをしたのでしょうか? 私たちの計画は、シード投資を行うだけではなく、ジュリアンが私たちのためにしてくれたことすべてをスタートアップのために行うことでした。

YC は基金として組織されたものではありません。運営費が十分安かったので、私たちは自分たちのお金で資金を調達しました。読者の 99% はそれが正しいと思いましたが、プロの投資家は「おお、それはすべての利益が得られたことを意味する」と考えています。しかし、繰り返しになりますが、これは私たちの側に特別な洞察力があったからではありません。私たちはVC企業がどのように組織されているのか知りませんでした。私たちは資金を調達しようとは思いつきませんでしたし、もし資金を調達できたとしても、どこから始めればよいのかわかりませんでした。[14]

YC の最も特徴的な点は、バッチ モデルです。つまり、年に 2 回、多数のスタートアップに一度に資金を提供し、その後 3 か月間集中的に彼らを支援することに集中します。その部分は、私たちが投資について無知だったために、暗黙的にだけでなく明示的に偶然発見したものです。私たちは投資家としての経験を積む必要がありました。一度に多数のスタートアップに資金を提供することより良い方法はないだろうかと私たちは考えました。夏の間、学部生がハイテク企業で臨時の仕事に就くことはわかっていました。代わりにスタートアップを立ち上げるサマープログラムを企画してみてはいかがでしょうか? 私たちは、ある意味で偽の投資家であることに罪悪感を感じることはありません。なぜなら、彼らも同様の意味で偽の創業者であるからです。したがって、私たちはそこからおそらく多くのお金を稼ぐことはできませんが、少なくとも彼らに投資する練習をすることができ、彼らはおそらくマイクロソフトで働くよりも興味深い夏を過ごすことになるでしょう。

私がケンブリッジに所有していた建物を本社として使用することになりました。私たちは週に一度そこで全員で夕食をとり、木曜日にはすでに木曜のディナーの料理をしていたため、火曜日に夕食をとりました。夕食後はスタートアップの専門家を招いて講演を行っていました。

当時、学部生が夏の仕事について決めていることはわかっていたので、数日のうちにサマーファウンダーズプログラムと呼ばれるものを作成し、サイトに告知を掲載して学部生に応募を呼びかけました。エッセイを書くことが、投資家が言うところの「ディールフロー」を得る方法になるとは想像もしていませんでしたが、結果的には完璧な情報源であることがわかりました。[15] サマー ファウンダー プログラムには 225 件の応募がありましたが、その多くがすでに卒業したか、その春を卒業しようとしている人たちからのものであることに驚きました。すでに、この SFP の問題は、私たちが意図していたよりも深刻だと感じ始めていました。

225 団体のうち約 20 団体に直接面接を依頼し、その中から 8 団体を選んで資金提供しました。彼らは印象的なグループでした。その最初のグループには、reddit、Justin Kan と Emmett Shear が含まれていました。彼らは後に Twitch を設立しました。Aaron Swartz はすでに RSS 仕様の作成に貢献し、数年後にオープンアクセスの殉教者となりました。そして Sam Altman は後にYCの2代目社長に就任。最初のバッチが非常に良かったのは完全に幸運ではなかったと思います。Microsoft や Goldman Sachs のような正当な場所での夏の仕事ではなく、Summer Founders Program のような奇妙なものにサインアップするには、かなり大胆でなければなりませんでした。

スタートアップ向けの契約は、私たちがジュリアンと結んだ契約（10％で1万ドル）と、ロバートがMITの大学院生が夏に得たもの（6千ドル）の組み合わせに基づいていた。私たちは創業者 1 人あたり 6,000 ドルを投資しましたが、典型的な創業者 2 人の場合では 12,000 ドルで、その見返りとして 6% が得られました。それは私たち自身が結んだ取引の2倍だったから、それは公平でなければなりませんでした。さらに、本当に暑かった最初の夏、ジェシカは創設者たちに無料のエアコンをもたらしました。[16]

かなりすぐに、スタートアップの資金調達を拡大する方法につまずいたことに気づきました。スタートアップに一括で資金を提供することは、一度に多くのスタートアップにできることを意味するため、私たちにとってより便利でしたが、バッチに参加することはスタートアップにとってもより良いことでした。これにより、創業者が直面する最大の問題の 1 つである孤立が解決されました。今では、同僚だけでなく、あなたが直面している問題を理解し、それをどのように解決しているかを教えてくれる同僚もいます。

YC が成長するにつれて、私たちはスケールによる他の利点にも気づき始めました。卒業生は緊密なコミュニティになり、お互いを助けることに専念し、特に現役の学生は彼らが同じ靴を履いていたことを覚えていました。また、スタートアップ企業がお互いの顧客になりつつあることにも気づきました。私たちは以前は冗談で「YC GDP」について言及していましたが、YC が成長するにつれて、これはますます冗談ではなくなりました。現在、多くのスタートアップは、最初の顧客セットをほぼ完全にバッチメイトの中から獲得しています。

私は当初、YC をフルタイムの仕事にするつもりはありませんでした。私は 3 つのことを行うつもりでした。ハッキング、エッセイの執筆、YC への取り組みです。YC が成長し、私もそれに興奮するようになり、私の注意の 3 分の 1 以上を YC が占めるようになりました。しかし、最初の数年間はまだ他のことに取り組むことができました。

2006 年の夏、ロバートと私は Arc の新しいバージョンの開発に取り組み始めました。これは Scheme にコンパイルされていたため、かなり高速でした。この新しい Arc をテストするために、Hacker News を書きました。元々はスタートアップの創業者向けのニュース アグリゲーターを目的としていて、Startup News という名前でしたが、数か月経つとスタートアップのことしか書かれていないことに飽きてしまいました。さらに、私たちがアプローチしたいのはスタートアップの創業者ではありませんでした。それは将来のスタートアップの創業者たちでした。そこで私は名前を Hacker News に変更し、トピックを知的好奇心を刺激するものに変更しました。

HN は間違いなく YC にとって良いことでしたが、私にとっては最大のストレス源でもありました。もし私が創業者を選んで支援するだけだったら、人生はとても楽になっていたでしょう。それはHNが間違いだったということを意味します。確かに、仕事における最大のストレスの原因は、少なくとも仕事の核心に近いものであるはずです。一方、私は、マラソンを走っているときに痛みを感じたのは、ランニングの努力によるものではなく、足に合わない靴のせいで水ぶくれができた人のようなものでした。私が YC 中に緊急の問題に対処していたとき、それが HN に関係している可能性は約 60%、他のすべてを合わせた可能性は 40% でした。[17]

HN と同様に、私も YC の社内ソフトウェアをすべて Arc で書きました。しかし、私は Arc でかなりの作業を続けましたが、徐々に Arc での作業をやめていきました。その理由の 1 つは時間がなかったことと、もう 1 つはこれだけの言語をいじるのがあまり魅力的でなくなったためです。それに依存するインフラ。これで、私の 3 つのプロジェクトは 2 つに減りました。エッセイを書くことと、YC に取り組むことです。

YC は、私がこれまで行ってきた他の種類の仕事とは異なりました。何を取り組むかを自分で決める代わりに、問題が私に降りかかりました。6 か月ごとに新しいスタートアップ企業が誕生し、彼らの問題が、それが何であれ、私たちの問題になりました。彼らの問題は非常に多様であり、優れた創設者は非常に有能だったため、これは非常に魅力的な仕事でした。できるだけ短期間でスタートアップについてできる限り多くのことを学ぼうとしているのであれば、これ以上に良い方法はありません。

仕事の中で気に入らない部分もありました。共同創業者間の争い、いつ人々が私たちに嘘をついていたかを突き止めること、スタートアップを虐待する人々との争いなど。でも、苦手な部分も一生懸命頑張りました。私は、ケビン・ヘイルがかつて会社について言った言葉に悩まされていました。「上司よりも一生懸命働く人はいない」。彼はそれを説明的にも規範的にも言いたかったのですが、私が怖かったのは後半の部分でした。私は YC が良くなるようにしたかったので、もし私の頑張りが他のみんなの頑張りの上限を決めるのであれば、私は一生懸命働いたほうがいいでしょう。

2010 年のある日、インタビューのためにカリフォルニアを訪れていたとき、ロバート モリスは驚くべきことを行いました。彼は私に一方的なアドバイスを提供しました。彼が以前に一度だけそれをしたことを覚えています。ある日、Viaweb で私が腎臓結石で二重に曲がってしまったとき、彼は私を病院に連れて行った方が良いと提案しました。それが、Rtm が一方的なアドバイスを提供するために必要なことでした。だから私は彼の正確な言葉を非常に鮮明に覚えています。「ご存知のように、Y Combinator が最後にできるクールなことではないことを確認する必要があります。」

その時は彼の言っている意味が分かりませんでしたが、徐々に彼が辞めるべきと言っているのだと分かりました。YC の業績は好調だったため、これは奇妙なアドバイスに思えました。しかし、Rtm がアドバイスを提供することより珍しいことがあるとすれば、それは Rtm が間違っているということです。それで、これは私に考えさせました。確かに、私の現在の軌道では、YC は私の最後の仕事になるだろう。なぜなら、YC は私の注意をさらに奪うだけだったからである。すでにアークを食べており、エッセイも食べている途中だった。YCが私の生涯の仕事であるか、そうでなければ最終的には辞めなければならないかのどちらかです。そしてそうではなかったので、私はそうするでしょう。

2012年の夏、母が脳卒中を起こしましたが、その原因は結腸がんによる血栓であることが判明しました。脳卒中により彼女は平衡感覚を失い、彼女は老人ホームに入れられましたが、彼女はそこから抜け出して家に戻りたいと心から望んでいたので、妹と私はそれを手助けする決意をしていました。私は定期的に彼女を訪ねるためにオレゴン州まで飛行機で行き、その飛行機の中で考える時間がたくさんありました。そのうちの 1 つで、YC を他の人に引き渡す準備ができていることに気づきました。

私はジェシカに大統領になりたいかどうか尋ねましたが、彼女はそうではなかったので、サム・アルトマンを採用してみることにしました。私たちはロバートとトレバーと話し合い、衛兵を完全に交替させることに同意しました。その時点まで、YC は私たち 4 人が立ち上げたオリジナルの LLC によって管理されていました。しかし、私たちは YC が長く存続することを望んでおり、そのためには創設者がコントロールできないようにしたいと考えていました。それでサムがイエスと言ったら、私たちは彼にYCを再編させようと思います。ロバートと私は引退し、ジェシカとトレバーは普通のパートナーになるでしょう。

私たちがサムにYCの会長になりたいかと尋ねたところ、最初はノーと答えました。彼は原子炉を作るスタートアップを立ち上げたいと考えていました。しかし私はそれを続け、2013 年 10 月に彼はついに同意しました。私たちは彼が2014年冬のバッチから引き継ぐことに決めました。2013 年の残りの期間、私は YC の運営をサムに任せることが多くなりました。その理由の 1 つは彼に仕事を覚えてもらうためであり、もう 1 つは私が癌が再発した母の世話に専念していたからです。

彼女は 2014 年 1 月 15 日に亡くなりました。私たちはこれが来ることを知っていましたが、実際にそうなったときはまだ大変でした。

私は 3 月まで YC に取り組み続け、そのバッチのスタートアップがデモデイを通過できるよう支援し、その後、ほぼ完全にチェックアウトしました。（私は今でも卒業生や、興味のあることに取り組んでいる新しいスタートアップと話をしていますが、それは週に数時間しかかかりません。）

次に何をすればいいでしょうか？RTM のアドバイスにはそのことについては何も含まれていませんでした。まったく違うことをしたかったので、絵を描くことにしました。本当に集中したらどれだけ上手くなるか試してみたかったのです。それで、YCの作業をやめた翌日から絵を描き始めました。私は錆びていて、調子を取り戻すのに時間がかかりましたが、少なくとも完全に魅力的でした。[18]

2014年の残りのほとんどを絵を描くことに費やしました。これまでこんなに途切れることなく仕事ができたことはなかったし、以前よりも上達することができました。十分ではありませんが、より良くなりました。そして11月、絵を描いている最中に力尽きてしまいました。それまでは自分が描いていた絵がどうなるのか興味があったのですが、急に完成させるのが大変に思えてきました。そこで作業をやめてブラシを掃除し、それ以来絵を描いていません。とにかくここまで。

それはかなり弱々しく聞こえると思います。しかし、注意力はゼロサムゲームです。取り組む内容を選択できるのに、自分にとって最適ではない (または少なくとも良い) プロジェクトを選択した場合、それは他のプロジェクトの邪魔になることになります。そして 50 歳になると、失敗するのにある程度の機会コストが発生しました。

私は再びエッセイを書き始め、その後数か月間でたくさんの新しいエッセイを書きました。スタートアップに関するものではないものもいくつか書きました。そして 2015 年 3 月に私は再び Lisp に取り組み始めました。

Lisp の特徴は、そのコアがそれ自体にインタプリタを記述することによって定義される言語であることです。これはもともと、通常の意味でのプログラミング言語として意図されたものではありませんでした。これは、チューリング マシンに代わる計算の正式なモデルとなることを意図していました。言語自体のインタプリタを作成したい場合、事前定義された演算子の最小セットは何でしょうか? John McCarthy が発明した、またはより正確には発見した Lisp は、その質問に対する答えです。[19]

マッカーシーは、大学院生のスティーブ・ラッセルが提案するまで、この Lisp がコンピューターのプログラムに使用できることさえ知りませんでした。ラッセルはマッカーシーのインタプリタを IBM 704 機械語に翻訳し、その時点から Lisp も通常の意味でのプログラミング言語になり始めました。しかし、その起源が計算モデルであることにより、他の言語では真似できないパワーと優雅さが与えられました。大学時代の私はこれに惹かれましたが、当時は理由がわかりませんでした。

McCarthy の 1960 Lisp は、Lisp 式を解釈するだけでした。プログラミング言語に必要な多くのものが欠けていました。したがって、これらを追加する必要がありましたが、追加されたとしても、マッカーシーの元の公理的アプローチを使用して定義されていませんでした。当時はそれは不可能だったでしょう。マッカーシー氏は、プログラムの実行を手動でシミュレートすることでインタープリタをテストしました。しかし、その方法でテストできるインタプリタの限界はすでに限界に近づいていました。実際、マッカーシーが見落としていたバグがそこにはありました。より複雑なインタプリタをテストするには、それを実行する必要がありましたが、当時のコンピュータは十分な能力がありませんでした。

しかし、今はそうです。これで、完全なプログラミング言語を定義するまで、マッカーシーの公理的アプローチを使い続けることができます。そして、McCarthy's Lisp に加えたすべての変更が発見性を維持する変換である限り、原理的には、この品質を備えた完全な言語を完成させることができます。もちろん、話すよりも実行するのは難しいですが、原理的にそれが可能であるなら、試してみてはいかがでしょうか？そこで、試してみることにしました。2015 年 3 月 26 日から 2019 年 10 月 12 日までの 4 年間かかりました。明確に定義された目標があったのは幸運でした。そうでなければ、これほど長い間それを続けるのは困難でした。

私は、Bel と呼ばれるこの新しい Lisp 自体を Arc で書きました。矛盾しているように聞こえるかもしれませんが、これは、この作品を作るために私がどのようなトリックを実行しなければならなかったのかを示しています。途方もないハックの集合体によって、私は実際に実行できる、それ自体で記述されたインタプリタに十分近いものを作成することができました。高速ではありませんが、テストするには十分な速さです。

この期間のほとんどの間、私はエッセイを書くことを自分自身に禁止しなければなりませんでした。そうでなければ、決して書き終えることはできなかったでしょう。2015 年末、私はエッセイを書くのに 3 か月を費やしましたが、Bel の作業に戻ったとき、コードはほとんど理解できませんでした。書かれ方が悪かったからではなく、問題が非常に複雑だったからです。独自に記述されたインタプリタを使用している場合、どのレベルで何が起こっているかを追跡するのは難しく、エラーを取得するまでにエラーは事実上暗号化されている可能性があります。

それで私は、ベルが終わるまではもうエッセイは書かないと言いました。しかし、私がこの作品に取り組んでいる間、私はベルについてほとんどの人に話しませんでした。ですから、何年もの間、私は何もしていないように見えたに違いありませんが、実際には、これまでに何にも取り組んだことのないほど一生懸命働いていました。時々、恐ろしいバグと何時間も格闘した後、Twitter や HN をチェックすると、「Paul Graham はまだコードを書いていますか?」と尋ねている人を見かけます。

「Bel」の作業は大変でしたが満足のいくものでした。非常に集中的に取り組んだので、いつでも頭の中にコードのかなりの部分があり、そこにさらに書くことができました。2015 年の晴れた日に少年たちを海岸に連れて行き、彼らが潮だまりで遊んでいるのを見ながら、継続に関する問題にどう対処するかを考えたのを覚えています。人生を正しくやっているように感じました。あまりの斬新さに少しがっかりしたので覚えています。良いニュースは、今後数年間、このような瞬間がもっとあったということです。

2016年の夏にイギリスに移住しました。私たちは子供たちに、他の国で生活することがどのようなものかを見てもらいたかったのですが、私は生まれながらにイギリス国民だったので、それは当然の選択だと思いました。1年だけ滞在する予定でしたが、とても気に入ったので今でも住んでいます。つまり、『ベル』のほとんどはイギリスで書かれたのです。

2019年の秋、ついにベルが完成しました。マッカーシーのオリジナルの Lisp と同様に、これは実装ではなく仕様ですが、マッカーシーの Lisp と同様にコードとして表現される仕様です。

エッセイをまた書けるようになったので、積み上げていたテーマについてまとめて書きました。私は2020年までエッセイを書き続けましたが、他に取り組めることも考え始めました。やるべきことをどうやって選べばいいのでしょうか？さて、私はこれまでどのようにして取り組むべきものを選んでいたでしょうか? 私はその質問に答えるために自分でエッセイを書きましたが、その答えがあまりにも長くて乱雑なものになったことに驚きました。もしこれが、それを経験した私にとって驚きだったとしたら、おそらく他の人にとっては興味深いものであり、同様に厄介な人生を送っている人々にとっては励みになるだろうと思いました。そこで、他の人にも読んでもらえるように、より詳細なバージョンを書きました。これがその最後の文です。









ノート

[1] 私の経験は、対話型 OS を備えたタイムシェアリング マシンという、コンピューターの進化の 1 段階をスキップしました。私はバッチ処理からマイコンに直接移行したため、マイコンはますます魅力的に思えました。

[2] 抽象的な概念を表すイタリア語の単語は、英語の同族語からほぼ常に予測できます (polluzione のような時折の罠を除く)。日常の言葉が違うのです。したがって、多くの抽象的な概念をいくつかの単純な動詞と組み合わせれば、少しのイタリア語を大いに活用できるようになります。

[3] 私はサン フェリーチェ 4 番広場に住んでいたので、アカデミアへの散歩は古いフィレンツェの背骨をまっすぐに下っていました。ピッティを通り、橋を渡り、オルサンミケーレを通り、ドゥオーモと洗礼堂の間を通り、そしてリカソーリ通りを上って、サンマルコ広場。私は、誰もいない暗い冬の夜から、通りが観光客でいっぱいのうだるような夏の日まで、あらゆる状況のフィレンツェを街頭で見ました。

[4] もちろん、望むなら人々を静物画のように描くこともできますし、彼らも喜んでくれます。この種の肖像画はおそらく静物画の頂点ですが、長時間座っていると座っている人に苦痛の表情が生まれる傾向があります。

[5] インターリーフは、賢い人材を擁し、優れたテクノロジーを構築したにもかかわらず、ムーアの法則によって潰された多くの企業のうちの 1 つでした。1990 年代、コモディティ (つまりインテル) プロセッサーの力の急激な成長により、ハイエンドの特殊用途のハードウェアおよびソフトウェア企業がブルドーザーのように押し寄せました。

[6] RISD の特徴的なスタイルの探求者は、特に傭兵ではありませんでした。アートの世界では、お金とカッコよさは密接に結びついています。高価なものはすべてクールと見なされるようになり、クールと見なされるものはすぐに同じように高価になります。

[7] 厳密に言えば、アパートは家賃管理ではなく家賃安定化だったが、これはニューヨーカーだけが知っている、または気にしている改良点である。市場価格の半額以下と本当に安かったのがポイントです。

[8] ほとんどのソフトウェアは、完了したらすぐに起動できます。しかし、ソフトウェアがオンライン ストア ビルダーであり、あなたがストアをホストしている場合、まだユーザーがいない場合、その事実は痛いほど明らかです。そのため、公的にローンチする前に、最初のユーザーを募集し、彼らがきちんとした外観のストアを持っていることを確認するという意味で、非公開でローンチする必要がありました。

[9] ユーザーが独自のページ スタイルを定義できるように、Viaweb にはコード エディターがありました。彼らはそれを知りませんでしたが、その下で Lisp 式を編集していました。しかし、これはアプリエディターではありませんでした。なぜなら、このコードは、買い物客がサイトを訪問したときではなく、販売者のサイトが生成されたときに実行されたからです。

[10] これは、今ではおなじみの経験の最初の例であり、その後に起こったことも同様で、コメントを読んでみると、そこには怒っている人々がたくさんいることがわかりました。Lisp が他の言語よりも優れているとどうやって主張できるのでしょうか? それらはすべてチューリング完全なものではなかったでしょうか? 私の書いたエッセイの反響を見た人から「かわいそうだね」と言われることもありますが、「最初からずっとそうだよ」と答えるのは大げさではありません。それは領土に付属しています。エッセイでは読者がまだ知らないことを伝えなければなりませんが、そのようなことを言われるのを嫌う人もいます。

[11] もちろん、90 年代には人々はインターネット上にたくさんのものを公開しましたが、何かをオンラインに公開することと、それをオンラインで公開することは同じではありません。オンラインで公開することは、オンライン バージョンを (または少なくとも) プライマリ バージョンとして扱うことを意味します。

[12] ここには、Y Combinator での私たちの経験からも分かる一般的な教訓があります。それは、税関は、その原因となった制限がなくなった後も、ずっとあなたを拘束し続けるということです。VC の慣例的な慣行は、かつてはエッセイの出版に関する慣例と同様、実際の制約に基づいていました。かつてスタートアップは起業するのにはるかに費用がかかり、それに比例して希少でした。今ではそれらは安価で一般的なものになっているかもしれませんが、エッセイを書くことに関する習慣が依然として印刷時代の制約を反映しているのと同じように、ベンチャーキャピタルの習慣は依然として古い世界を反映しています。

これはつまり、独立志向のある（慣習にあまり影響されない）人々は、急速な変化の影響を受ける分野（慣習が廃れる可能性が高い分野）では有利であることを意味します。

ただし、ここに興味深い点があります。どの分野が急速な変化の影響を受けるかを常に予測できるわけではありません。ソフトウェアやベンチャーキャピタルがそうなるのは明らかですが、エッセイライティングがそうなると誰が予想したでしょうか。

[13] Y Combinator は元の名前ではありませんでした。最初はケンブリッジシードと呼ばれていました。しかし、シリコンバレーで誰かが私たちの名前を真似した場合に備えて、地域名を付ける必要はなかったので、ラムダ計算の最もクールなトリックの 1 つである Y コンビネーターにちなんで名前を変更しました。

私がオレンジを色として選んだのは、一つにはそれが最も暖かいからであり、一つにはそれを使用するVCがいなかったからです。2005年にはすべてのVCが、創業者ではなくLPにアピールしようとしていたため、栗色、紺色、フォレストグリーンなどの落ち着いた色を使用していた。YC のロゴ自体は内輪のジョークです。Viaweb のロゴは赤い円に白い V でした。そこで、YC のロゴをオレンジ色の四角に白い Y にしました。

[14] YC は 2009 年から数年間ファンドになりましたが、その規模が大きくなりすぎて個人的に資金を提供する余裕がなくなったためです。しかし、Heraku が買収された後、自己資金に戻るのに十分な資金ができました。

[15] 私は「ディールフロー」という用語があまり好きではありませんでした。なぜなら、それは常に新しいスタートアップの数が固定されていることを意味するからです。これは虚偽であるだけでなく、そうでなければ存在しなかったであろうスタートアップを設立させることで、これを改ざんすることが YC の目的です。

[16] 彼女は、エアコンが故障していて、できる限りのものを手に入れなければならなかったので、それらはすべて異なる形と大きさだったと報告していますが、それらはすべて今運ぶことができるよりも重かったです。

[17] HN に関するもう 1 つの問題は、エッセイを書きながらフォーラムを運営するときに発生する奇妙なエッジ ケースでした。フォーラムを運営するときは、すべての会話ではないにしても、少なくとも自分が関わるすべての会話を確認することが前提となります。そして、あなたがエッセイを書くと、人々はそれに対する非常に想像力豊かな誤解をフォーラムに投稿します。これら 2 つの現象は、個別には退屈ですが耐えられるものですが、組み合わされると悲惨です。実際には、誤解には応答する必要があります。会話に自分が参加しているという前提は、十分に賛成票を投じられた誤解に応答しないことは、それが正しいことを暗黙のうちに認めているとみなされることを意味するからです。しかし、それがさらに励みになります。あなたに喧嘩を売りたい人は、今がチャンスだと感じています。

[18] YCを離れることで最悪だったのは、ジェシカと仕事ができなくなったことだ。私たちは知り合ってからほぼずっと YC に取り組んできました。YC を私生活から切り離そうとも考えたこともなかったので、離れることは深く根を張った木を引き抜くようなものでした。

[19] 発明されたものと発見されたものという概念をより正確に理解する 1 つの方法は、宇宙人について話すことです。十分に発達した異星文明であれば、たとえばピタゴラスの定理については確実に知っているでしょう。確実性は低いものの、彼らはマッカーシーの 1960 年の論文で Lisp についても知っていただろうと私は信じています。

しかし、もしそうであれば、これが彼らが知っている言語の限界であると考える理由はありません。おそらく宇宙人には数字とエラーとI/Oも必要なのだろう。したがって、マッカーシーのリスプから発見性が保たれる少なくとも 1 つのパスが存在する可能性が高いと思われます。



この草稿を読んでくれた Trevor Blackwell、John Collison、Patrick Collison、Daniel Gackle、Ralph Hazell、Jessica Livingston、Robert Morris、Harj Taggar に感謝します。